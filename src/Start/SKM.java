/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Start;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.WindowEvent;
import java.text.DecimalFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Windows 1021
 */
public class SKM extends javax.swing.JFrame {

    /**
     * Creates new form SKM
     */
    public SKM() {
        initComponents();
        this.setLocationRelativeTo(this);
    }

    public void close (){
        WindowEvent closeWindow = new WindowEvent (this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    public double roundDecimal(double value, int decimalPlaces) {
        double multiplier = Math.pow(10, decimalPlaces);
        double roundedValue = Math.round(value * multiplier) / multiplier;
        double decimalPart = roundedValue - Math.floor(roundedValue);
        int lastDigit = (int) (decimalPart * 10) % 10;

        if (lastDigit == 1 || lastDigit == 2) {
            roundedValue = Math.floor(roundedValue);
        } else if (lastDigit == 3 || lastDigit == 4) {
            roundedValue = Math.floor(roundedValue) + 0.5;
        } else if (lastDigit == 5 || lastDigit == 6) {
            roundedValue = Math.floor(roundedValue) + 0.5;
        } else if (lastDigit == 8 || lastDigit == 9) {
            roundedValue = Math.floor(roundedValue) + 1;
        }
        return roundedValue;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListBahan = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        btnCopy = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtHistori = new javax.swing.JTextArea();
        cbDari = new javax.swing.JComboBox<>();
        cbKe = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMasukan = new javax.swing.JTextField();
        txtHasil = new javax.swing.JTextField();
        btnHapus = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cook Measurement Conversion");

        jPanel1.setBackground(new java.awt.Color(169, 186, 157));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 25)); // NOI18N
        jLabel1.setText("Cook Measurement Conversion");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/timbangan.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(70, 78, 46));

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("INGREDIENT'S");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        ListBahan.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Air", "Soda Kue", "Susu Kental Manis", "Tepung Roti", "Gula Pasir", "Gula Aren", "Yoghurt", "Sirup Jagung", "Heavy Cream", "Mentega", "Minyak Sayur", "Garam Meja (Halus)", "Garam Kasar", "Cabai Bubuk", "Beras" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListBahan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListBahanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListBahan);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(70, 78, 46));

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("SUSU KENTAL MANIS");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(169, 186, 157));

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setText("Hasil Konversi");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(169, 186, 157));

        btnCopy.setBackground(new java.awt.Color(169, 186, 157));
        btnCopy.setText("COPY");
        btnCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopyActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtHistori.setEditable(false);
        txtHistori.setColumns(20);
        txtHistori.setRows(5);
        jScrollPane2.setViewportView(txtHistori);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCopy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel8Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnCopy)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cbDari.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "grams (g)", "kilogram (kg)", "ounces (oz)", "pounds (lb)", "milliliters (mL)", "liters (L)", "teaspoons [5 mL] (tsp)", "tablespoons [15 mL] (tbsp)", "uk cups (UK cup)", "us cups (US cup)", "glasses [250 mL]" }));

        cbKe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "grams (g)", "kilogram (kg)", "ounces (oz)", "pounds (lb)", "milliliters (mL)", "liters (L)", "teaspoons [5 mL] (tsp)", "tablespoons [15 mL] (tbsp)", "uk cups (UK cup)", "us cups (US cup)", "glasses [250 mL]" }));

        jLabel4.setFont(new java.awt.Font("sansserif", 1, 16)); // NOI18N
        jLabel4.setText("Ke");

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setText("Masukkan Angka");

        txtMasukan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMasukanActionPerformed(evt);
            }
        });
        txtMasukan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMasukanKeyReleased(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(169, 186, 157));
        btnHapus.setText("CLEAR");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(txtMasukan))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(cbDari, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(cbKe, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 28, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbDari, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbKe, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtMasukan, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHasil, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus))
                .addGap(12, 12, 12)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Tentang");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopyActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Berhasil di copy", "Information",JOptionPane.INFORMATION_MESSAGE);
        Clipboard Copy = getToolkit().getSystemClipboard();
        String toClipBoardText = txtHistori.getText();
        StringSelection stringClip = new StringSelection(toClipBoardText);
        Copy.setContents(stringClip, stringClip);
    }//GEN-LAST:event_btnCopyActionPerformed

    private void txtMasukanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMasukanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMasukanActionPerformed

    private void txtMasukanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMasukanKeyReleased
        // TODO add your handling code here:
        String awal = cbDari.getSelectedItem().toString();
        String akhir = cbKe.getSelectedItem().toString();
        DecimalFormat decimalFormat = new DecimalFormat("0.#");

        if (txtMasukan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Masukkan nilai konversi", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
        } else {
            String input = txtMasukan.getText();
            try {
                double value = Double.parseDouble(input);
                if (!input.matches("-?\\d+(\\.\\d+)?")) {
                    JOptionPane.showMessageDialog(this, "Masukkan nilai yang valid", "ERROR MESSAGE", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                //Gram
                if((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoG = (double)(first);
                    String result = decimalFormat.format(GtoG);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke gram adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoG = first * 0.001;
                    double roundedValue = roundDecimal(GtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke kilogram (kg) adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoOZ = first * 0.035;
                    double roundedValue = roundDecimal(GtoOZ, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoLB = first * 0.0022;
                    double roundedValue = roundDecimal(GtoLB, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtomL = first * 0.758;
                    double roundedValue = roundDecimal(GtomL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoL = first * 0.00076;
                    double roundedValue = roundDecimal(GtoL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoTSP = first * 0.152;
                    double roundedValue = roundDecimal(GtoTSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoTBSP = first * 0.051;
                    double roundedValue = roundDecimal(GtoTBSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoUK = first * 0.0027;
                    double roundedValue = roundDecimal(GtoUK, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoUS = first * 0.0032;
                    double roundedValue = roundDecimal(GtoUS, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("grams (g)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double GtoGL = first * 0.003;
                    double roundedValue = roundDecimal(GtoGL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "gram ke glasses adalah" + " " + result + " " + "glasses");

                    //kilogram
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoG = first * 1000;
                    double roundedValue = roundDecimal(KGtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke gram adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoKG = (double)(first);
                    String result = decimalFormat.format(KGtoKG);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoOZ = first * 35.3;
                    double roundedValue = roundDecimal(KGtoOZ, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoLB = first * 2.2;
                    double roundedValue = roundDecimal(KGtoLB, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtomL = first * 758.3;
                    double roundedValue = roundDecimal(KGtomL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoL = first * 0.758;
                    double roundedValue = roundDecimal(KGtoL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoTSP = first * 151.7;
                    double roundedValue = roundDecimal(KGtoTSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoTBSP = first * 51.3;
                    double roundedValue = roundDecimal(KGtoTBSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoUK = first * 2.67;
                    double roundedValue = roundDecimal(KGtoUK, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoUS = first * 3.21;
                    double roundedValue = roundDecimal(KGtoUS, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("kilogram (kg)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double KGtoG = first * 3.03;
                    double roundedValue = roundDecimal(KGtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "kilogram ke glasses adalah" + " " + result + " " + "glasses");

                    //ounces (oz)
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoG = first * 28.3;
                    double roundedValue = roundDecimal(OZtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke gram adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoKG = first * 0.028;
                    double roundedValue = roundDecimal(OZtoKG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoOZ = (double)(first);
                    String result = decimalFormat.format(OZtoOZ);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoLB = first * 0.063;
                    double roundedValue = roundDecimal(OZtoLB, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoML = first * 21.5;
                    double roundedValue = roundDecimal(OZtoML, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoL = first * 0.021;
                    double roundedValue = roundDecimal(OZtoL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoTSP = first * 4.3;
                    double roundedValue = roundDecimal(OZtoTSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoTBSP = first * 1.45;
                    double roundedValue = roundDecimal(OZtoTBSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoUK = first * 0.076;
                    double roundedValue = roundDecimal(OZtoUK, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoUS = first * 0.091;
                    double roundedValue = roundDecimal(OZtoUS, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("ounces (oz)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double OZtoML = first * 0.086;
                    double roundedValue = roundDecimal(OZtoML, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "ounces ke glasses adalah" + " " + result + " " + "glasses");

                    //pounds (lb)
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoG = first * 453.6;
                    double roundedValue = roundDecimal(LBtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke gram adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoKG = first * 0.454;
                    double roundedValue = roundDecimal(LBtoKG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoOZ = first * 16;
                    double roundedValue = roundDecimal(LBtoOZ, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoLB = (double)(first);
                    String result = decimalFormat.format(LBtoLB);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoML = first * 344;
                    double roundedValue = roundDecimal(LBtoML, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoL = first * 0.344;
                    double roundedValue = roundDecimal(LBtoL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoTSP = first * 68.8;
                    double roundedValue = roundDecimal(LBtoTSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoTBSP = first * 23.3;
                    double roundedValue = roundDecimal(LBtoTBSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoUK = first * 1.21;
                    double roundedValue = roundDecimal(LBtoUK, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoUS = first * 1.45;
                    double roundedValue = roundDecimal(LBtoUS, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("pounds (lb)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double LBtoGL = first * 1.38;
                    double roundedValue = roundDecimal(LBtoGL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "pounds ke glasses adalah" + " " + result + " " + "glasses");

                    //milliliters (mL)
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoG = first * 1.32;
                    double roundedValue = roundDecimal(MLtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke us grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoKG = first * 0.0013;
                    double roundedValue = roundDecimal(MLtoKG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoOZ = first * 0.047;
                    double roundedValue = roundDecimal(MLtoOZ, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoLB = first * 0.0029;
                    double roundedValue = roundDecimal(MLtoLB, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoML = (double)(first);
                    String result = decimalFormat.format(MLtoML);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoL = first * 0.001;
                    double roundedValue = roundDecimal(MLtoL, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoTSP = first * 0.2;
                    double roundedValue = roundDecimal(MLtoTSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoTBSP = first * 0.068;
                    double roundedValue = roundDecimal(MLtoTBSP, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoUK = first * 0.0035;
                    double roundedValue = roundDecimal(MLtoUK, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoUS = first * 0.0042;
                    double roundedValue = roundDecimal(MLtoUS, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("milliliters (mL)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double MLtoG = first * 0.004;
                    double roundedValue = roundDecimal(MLtoG, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "mililiters ke glasses adalah" + " " + result + " " + "glasses");

                    //liters (L)
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1218.7;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1.32;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 46.5;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 2.91;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1000;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 200;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 67.6;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 3.52;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 4.23;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke us cups adalah" + " " + result + " " + "us cups");
                } else if ((awal.equalsIgnoreCase("liters (L)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 4;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "liters ke glasses adalah" + " " + result + " " + "glasses");

                    //teaspoons [5 mL] (tsp)
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 6.59;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.0066;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.233;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.0015;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 5;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.005;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.338;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.018;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.021;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("teaspoons [5 mL] (tsp)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.02;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "teaspoons ke glasses adalah" + " " + result + " " + "glasses");

                    //tablespoons [15 mL] (tbsp)
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 19.5;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.02;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke kilograms adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.688;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.043;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 14.8;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.015;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 2.96;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.052;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.062;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("tablespoons [15 mL] (tbsp)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.059;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "tablespoons ke glasses adalah" + " " + result + " " + "glasses");

                    //uk cups (UK cup)
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 374.7;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.375;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 13.2;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.826;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 284.1;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.284;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 56.8;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 19.2;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1.2;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("uk cups (UK cup)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1.14;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "uk cups ke glasses adalah" + " " + result + " " + "glasses");

                    //us cups (US cup)
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 312;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.312;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 11;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.688;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 236.6;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.237;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 47.3;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 16;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.833;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("us cups (US cup)")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.946;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "us cups ke glasses adalah" + " " + result + " " + "glasses");

                    //glasses [250 mL]
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("grams (g)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 329.7;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke grams adalah" + " " + result + " " + "g");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("kilogram (kg)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.33;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke kilogram adalah" + " " + result + " " + "kg");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("ounces (oz)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 11.6;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke ounces adalah" + " " + result + " " + "ounces");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("pounds (lb)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.727;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke pounds adalah" + " " + result + " " + "pounds");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("milliliters (mL)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 250;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke milliliters adalah" + " " + result + " " + "mL");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("liters (L)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.25;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke liters adalah" + " " + result + " " + "L");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("teaspoons [5 mL] (tsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 50;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke teaspoons adalah" + " " + result + " " + "tsp");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("tablespoons [15 mL] (tbsp)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 16.9;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke tablespoons adalah" + " " + result + " " + "tbsp");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("uk cups (UK cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 0.88;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke uk cups adalah" + " " + result + " " + "UK cup");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("us cups (US cup)"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = first * 1.06;
                    double roundedValue = roundDecimal(YtoY, 1);
                    String result = decimalFormat.format(roundedValue);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke us cups adalah" + " " + result + " " + "US cup");
                } else if ((awal.equalsIgnoreCase("glasses [250 mL]")) && (akhir.equalsIgnoreCase("glasses [250 mL]"))){
                    String from = txtMasukan.getText();
                    double first = Double.parseDouble(from);
                    double YtoY = (double)(first);
                    String result = decimalFormat.format(YtoY);
                    txtHasil.setText(result);
                    txtHistori.setText(null);
                    txtHistori.append( "Konversi dari"+ " " + txtMasukan.getText() + " " + "glasses ke glasses adalah" + " " + result + " " + "glasses");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Masukkan angka", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_txtMasukanKeyReleased

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        txtMasukan.setText("");
        txtHasil.setText("");
        txtHistori.setText("");
    }//GEN-LAST:event_btnHapusActionPerformed

    private void ListBahanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListBahanMouseClicked
        // TODO add your handling code here:
        String selectedOption = (String) ListBahan.getSelectedValue();

        switch (selectedOption) {
            case "Air":
                close();
                Air banyu = new Air();
                banyu.setVisible(true);
                break;
            case "Soda Kue":
                close();
                Soda_kue sk = new Soda_kue();
                sk.setVisible(true);
                break;
            case "Susu Kental Manis":
                JOptionPane.showMessageDialog(this, "Anda telah memasuki program tersebut");
                break;
            case "Tepung Roti":
                close();
                Tepung_roti tp = new Tepung_roti();
                tp.setVisible(true);
                break;
            case "Gula Pasir":
                close();
                Gula_Pasir gp = new Gula_Pasir();
                gp.setVisible(true);
                break;
            case "Gula Aren":
                close();
                Gula_aren ga = new Gula_aren();
                ga.setVisible(true);
                break;
            case "Yoghurt":
                close();
                Yoghurt yg = new Yoghurt();
                yg.setVisible(true);
                break;
            case "Sirup Jagung":
                close();
                Sirup_jagung sj = new Sirup_jagung();
                sj.setVisible(true);
                break;
            case "Heavy Cream":
                close();
                HEAVY_CREAM hc = new HEAVY_CREAM();
                hc.setVisible(true);
                break;
            case "Mentega":
                close();
                Mentega bt = new Mentega();
                bt.setVisible(true);
                break;
            case "Minyak Sayur":
                close();
                Minyak_sayur ms = new Minyak_sayur();
                ms.setVisible(true);
                break;
            case "Garam Meja (Halus)":   
                close();
                Garam_meja gm = new Garam_meja();
                gm.setVisible(true);
                break;
            case "Garam Kasar":
                close();
                Garam_kasar gk = new Garam_kasar();
                gk.setVisible(true);
                break;
            case "Cabai Bubuk":
                close();
                Cabai_bubuk cb = new Cabai_bubuk();
                cb.setVisible(true);
                break;
            case "Beras":
                close();
                Beras upo = new Beras();
                upo.setVisible(true);
                break;
            default:
                break;
}
    }//GEN-LAST:event_ListBahanMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        new About().setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListBahan;
    private javax.swing.JButton btnCopy;
    private javax.swing.JButton btnHapus;
    private javax.swing.JComboBox<String> cbDari;
    private javax.swing.JComboBox<String> cbKe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtHasil;
    private javax.swing.JTextArea txtHistori;
    private javax.swing.JTextField txtMasukan;
    // End of variables declaration//GEN-END:variables
}
